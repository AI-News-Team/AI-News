version: "3"
services:
  database:
    container_name: database
    env_file: ./virtual.env
    build:
      context: ./database
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - type: bind
        source: ./database/backups
        target: /tmp/postgres/backups

  api:
    container_name: api
    env_file: ./virtual.env
    build:
      context: . # build needs access to /shared
      dockerfile: ./api/Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./shared:/app/shared
    depends_on:
      - database

  scraper:
    container_name: scraper
    env_file: ./virtual.env
    build:
      context: .
      dockerfile: ./scraper/Dockerfile
    depends_on:
      - api

  client:
    container_name: client
    env_file: ./virtual.env
    build:
      context: .
      dockerfile: ./client/Dockerfile
    depends_on:
      - api
    ports:
      - "${VITE_CLIENT_PORT}:${VITE_CLIENT_PORT}"

  search:
    container_name: search
    env_file: ./virtual.env
    build:
      context: ./search
    restart: on-failure
    depends_on:
      - api
    ports:
      - "${SEARCH_PORT}:${SEARCH_PORT}"

  paraphraser:
    container_name: paraphraser
    env_file: ./virtual.env
    build:
      context: .
      dockerfile: ./reWriter/Dockerfile
    depends_on:
      - api
      - scraper
